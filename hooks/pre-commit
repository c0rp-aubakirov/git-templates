#!/bin/bash
#
# An example hook script to verify what is about to be committed.
# Called by "git commit" with no arguments.  The hook should
# exit with non-zero status after issuing an appropriate message if
# it wants to stop the commit.
#
# To enable this hook, rename this file to "pre-commit".

# If there are whitespace errors, print the offending file names and fail.
# exec git diff-index --check --cached $against --

# Allows us to read user input below, assigns stdin to keyboard
exec < /dev/tty

# yes/no dialog. first argument is message that user will see
# if user enter n/N commit will be aborted
check_yes_no(){
	while true; do
		read -p "$1" yn
		if [ "$yn" = "" ]; then
			yn='Y'
		fi
		case "$yn" in
			[Yy] )
				break;;
			[Nn] )
				echo "Aborting commit"
				exit 1;;
			* ) 
				echo "Please answer y or n for yes or no.";;
		esac
	done;
}

# How many previous commits to check
NUM_CHK=5

# check if repository is inited already. git log should not give error exit code
if ! git log --format=%B -n $NUM_CHK > /dev/null; then
	echo "[pre-commit hook] Assuming that this commit is initialize repository"
	check_yes_no "[pre-commit hook] Continue? (Y/n) [Y]: "
fi

# check if repository does no have commits with word "TMP" in commmit message
log=`git log --format=%B -n $NUM_CHK`
if [[ "$log" = *TMP* ]] ; then
	echo "[pre-commit hook]WARNING: one of the previous commits contains TMP commit";
	check_yes_no "[pre-commit hook] Check if you want to commit TMP again? (Y/n)[Y]: "
fi
